{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x88FbFC85C348d441744343dC98fc8f41C7098192",
    "txHash": "0x087023eb783e6ab922d19783af5f9345cad6a1a24c9db9d9414c7c591b1fa65a"
  },
  "proxies": [
    {
      "address": "0x405c2520d74B5e8df51668F62a9c598d29f465e7",
      "txHash": "0xc11e072a7137fd614b69a7fd0353d7dad1d5447c12680849da75b275d2f72193",
      "kind": "transparent"
    },
    {
      "address": "0x53f7AD4707132e2160a57C55a0ff5AB75e41317A",
      "txHash": "0x4fb01e03fb9b410e26a3c6445f3289d3de0ea52af167f82176e0a2fcb8257c9f",
      "kind": "transparent"
    },
    {
      "address": "0x24a66afEedE4D8dA57387fFed08Cf208839B331f",
      "txHash": "0x947f2b00668848f4876bcff18bcc075607517548f161fcbdfeb40a6375018097",
      "kind": "transparent"
    }
  ],
  "impls": {
    "49f2f1506a85d48f988d953da883cde92bf6d2c00ef477c8d60778d3401da92f": {
      "address": "0xf8c098542BF4E18dc21f1Cd4AA3b7D9BA778fBC4",
      "txHash": "0x63a087f38de9cc4f51a7aab17db6c2012e54cd0eb71f585e78673159c93875fc",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Counter)188_storage",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:26"
          },
          {
            "label": "secondarySalesFees",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:29"
          },
          {
            "label": "NFTMint",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC1155MetadataURIUpgradeable)182",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:37"
          },
          {
            "label": "exchangeRateMaticUsd",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(AggregatorV3Interface)45",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:39"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "4",
            "type": "t_address_payable",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:54"
          },
          {
            "label": "contractsAllowed",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:60"
          },
          {
            "label": "idToTokenInfo",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(TokenInfo)5030_storage))",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:67"
          },
          {
            "label": "idToSellers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(TokenSellers)5047_storage))",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:84"
          },
          {
            "label": "smartContractToTokenIds",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "NFTMarketplaceUpgradable",
            "src": "contracts/NFTMarketplace.sol:94"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)92_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_address_payable)dyn_storage": {
            "label": "address payable[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(AggregatorV3Interface)45": {
            "label": "contract AggregatorV3Interface",
            "numberOfBytes": "20"
          },
          "t_contract(IERC1155MetadataURIUpgradeable)182": {
            "label": "contract IERC1155MetadataURIUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5030_storage)": {
            "label": "mapping(address => struct NFTMarketplaceUpgradable.TokenInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenSellers)5047_storage)": {
            "label": "mapping(address => struct NFTMarketplaceUpgradable.TokenSellers)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(TokenInfo)5030_storage))": {
            "label": "mapping(uint256 => mapping(address => struct NFTMarketplaceUpgradable.TokenInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(TokenSellers)5047_storage))": {
            "label": "mapping(uint256 => mapping(address => struct NFTMarketplaceUpgradable.TokenSellers))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)188_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenInfo)5030_storage": {
            "label": "struct NFTMarketplaceUpgradable.TokenInfo",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "smartContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "author",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "royalties",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "firstSalesFees",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "supply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "numberOfFirstSells",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(TokenSellers)5047_storage": {
            "label": "struct NFTMarketplaceUpgradable.TokenSellers",
            "members": [
              {
                "label": "sellers",
                "type": "t_array(t_address_payable)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sellingQuantity",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "sellingPrice",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "43cded0c7cf068c8d87b4db0aac80c8558e051e0c0cddd46825d0542072d7a20": {
      "address": "0x9DF5f32ebB7009Fc329a3636Ff13Ac706bf1557b",
      "txHash": "0xf5987ea836efa4d1b91e7df86856b4059073c35f01c3c2c7764858df0d8940f6",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Counter)188_storage",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:44"
          },
          {
            "label": "tokenCreator",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:46"
          },
          {
            "label": "tokenSupply",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:47"
          },
          {
            "label": "tokenRoyalties",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:48"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "4",
            "type": "t_address_payable",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:50"
          },
          {
            "label": "initialized",
            "offset": 20,
            "slot": "4",
            "type": "t_bool",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:53"
          },
          {
            "label": "nftMarketplaceInstance",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(Marketplace)6397",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:56"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:59"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage",
            "contract": "NFTMintUpgradable",
            "src": "contracts/NFTMint.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC1155Storage)184_storage": {
            "label": "struct ERC1155Upgradeable.ERC1155Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ERC1155URIStorageStorage)283_storage": {
            "label": "struct ERC1155URIStorageUpgradeable.ERC1155URIStorageStorage",
            "members": [
              {
                "label": "_baseURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)92_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_contract(Marketplace)6397": {
            "label": "contract Marketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)188_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC1155URIStorage": [
            {
              "contract": "ERC1155URIStorageUpgradeable",
              "label": "_baseURI",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:20",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:23",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.ERC1155": [
            {
              "contract": "ERC1155Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC1155Upgradeable",
              "label": "_uri",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
